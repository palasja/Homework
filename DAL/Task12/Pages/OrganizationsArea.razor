@page "/OrganizationsArea"
@page "/OrganizationsArea/{AreaId:int}"
@inject OrganizationService organizationService

@if (Organizations == null)
{
    @*    <p><em>Loading...</em></p>*@
}
else
{
    <button class="btn btn-light m-3" @onclick="NewContract">Добавить</button>
    <table class="table">
        <thead>
            <tr>
                <th>Название</th>
                <th>Адрес</th>
                <th>Email</th>
                <th>СМДО</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var org in Organizations)
            {
                <tr>
                    <td>  <NavLink href=@($"Contracts/{@org.Id}")>@org.FullName</NavLink></td>
                    <td>@org.Address</td>
                    <td>@org.Email</td>
                    <td>@org.Smdo</td>
                </tr>
            }
        </tbody>
    </table>
    <NewContract @ref="newContract" onCancel="onCancel" AreaId="@AreaId"></NewContract>
}

@code {
    [Parameter] public int AreaId { get; set; }
    NewContract newContract;
    List<OrganizationDTO> Organizations;
    protected override async Task OnInitializedAsync()
    {
        Organizations = await organizationService.GetOrganizationOnAreaAsync((int)AreaId);
    }
    void onCancel()
    {
        newContract.Hide();
    }
    void NewContract()
    {
        newContract.Show();
    }
}
