// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task9_1_2.Services;

namespace Task9_1_2.Migrations
{
    [DbContext(typeof(CharacterContext))]
    [Migration("20210218090431_Add Index on Aurhors")]
    partial class AddIndexonAurhors
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Task9_1_2.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("FirstName", "LastName");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Masashu",
                            LastName = "Kishimito"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Sui",
                            LastName = "Isida"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Yanai",
                            LastName = "Takumi"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "George",
                            LastName = "Lucas"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "George",
                            LastName = "R.R. Tolkien"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Joanne",
                            LastName = "Rowling"
                        });
                });

            modelBuilder.Entity("Task9_1_2.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StoryId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 14,
                            FirstName = "Naruto",
                            Gender = true,
                            LastName = "Uzumaki",
                            StoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            Age = 25,
                            FirstName = "Kushina",
                            Gender = false,
                            LastName = "Uzumaki",
                            StoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            Age = 20,
                            FirstName = "Ken",
                            Gender = true,
                            LastName = "Kaneki",
                            StoryId = 2
                        },
                        new
                        {
                            Id = 4,
                            Age = 961,
                            FirstName = "Rory",
                            Gender = false,
                            LastName = "Merkury",
                            StoryId = 3
                        },
                        new
                        {
                            Id = 5,
                            Age = 37,
                            FirstName = "Yōji ",
                            Gender = true,
                            LastName = "Itami",
                            StoryId = 3
                        },
                        new
                        {
                            Id = 6,
                            Age = 29,
                            FirstName = "Anakin",
                            Gender = true,
                            LastName = "Skywalker",
                            StoryId = 4
                        },
                        new
                        {
                            Id = 7,
                            Age = 47,
                            FirstName = "Frodo",
                            Gender = true,
                            LastName = "Begins",
                            StoryId = 5
                        },
                        new
                        {
                            Id = 8,
                            Age = 100,
                            FirstName = "Bulba",
                            Gender = true,
                            LastName = "Bagins",
                            StoryId = 6
                        },
                        new
                        {
                            Id = 9,
                            Age = 17,
                            FirstName = "Harry",
                            Gender = true,
                            LastName = "Potter",
                            StoryId = 7
                        },
                        new
                        {
                            Id = 10,
                            Age = 24,
                            FirstName = "Newt",
                            Gender = true,
                            LastName = "Scamander",
                            StoryId = 8
                        });
                });

            modelBuilder.Entity("Task9_1_2.Models.Story", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Dedcription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Stories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Dedcription = "I will be hokage",
                            Name = "Naruto"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Dedcription = "World in harder than we think",
                            Name = "Tokio ghoul"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            Dedcription = "None",
                            Name = "Gate"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            Dedcription = "Don't trust boss",
                            Name = "Star Wars"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 5,
                            Dedcription = "Throw the ring into hill",
                            Name = "The Lord of the Rings"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 5,
                            Dedcription = "About Bulba Baggins",
                            Name = "The Hobbit or There and Back Again"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 6,
                            Dedcription = "The boy who's alive",
                            Name = "Harry Potter"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 6,
                            Dedcription = "Saver of Fantastic Beasts ",
                            Name = "Fantastic Beasts and Where to Find Them"
                        });
                });

            modelBuilder.Entity("Task9_1_2.Models.Character", b =>
                {
                    b.HasOne("Task9_1_2.Models.Story", "Story")
                        .WithMany("Characters")
                        .HasForeignKey("StoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Story");
                });

            modelBuilder.Entity("Task9_1_2.Models.Story", b =>
                {
                    b.HasOne("Task9_1_2.Models.Author", "Author")
                        .WithMany("Story")
                        .HasForeignKey("AuthorId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Task9_1_2.Models.Author", b =>
                {
                    b.Navigation("Story");
                });

            modelBuilder.Entity("Task9_1_2.Models.Story", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
